#!/bin/bash

# journal
AUTHOR="Ben Winston"
CONTACT="<winsbe01@gmail.com>"
VERSION="0.3.4"
# A simple command-line journal tool.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>

set -euo pipefail

JNEDITOR="${JNEDITOR:-$EDITOR}"

this_path=$(readlink -f $0)
myname=`basename ${this_path}`

usage() {
	echo "${myname} ${VERSION}"
	echo -e "command: ${myname} [options]\n"
	echo "  -b => browse the journal"
	echo "  -h => brings you to this help screen"
	echo "  -s => search the journal for one or two terms"
	echo "  -u => update journal (same as no arguments)"
}

# the file where our journal is located
if [ -d "~/.journal" ]; then
	# historical path
	journaldir="~/.journal"
else
	# XDG path
	journaldir="${XDG_DATA_HOME:-$HOME/.local/share}/journal"
fi

mkdir -p ${journaldir} >/dev/null
journal="${journaldir}/journal"

if [ ! -r "${journal}" ]; then
	# create a new journal file
	touch ${journal}
	echo "*****************" >> ${journal}
	echo "* Daily Journal *" >> ${journal}
	echo -e "*****************\n~~~~~" >> ${journal}
fi


# 'jn' or 'jn -u' -> update the journal
if [ $# -eq 0 ] || [ "$1" = "-u" ]; then
	clear
	echo -e "You will now be taken into ${JNEDITOR}, where you may compose your journal entry.\n\n"
	read -p "Press enter to continue..."

    # where we'll store the entry (temporarily)
	# XDG path
    	tmpfile="${XDG_CACHE_HOME:-$HOME/.cache}/jn$(date +%s)"
	touch ${tmpfile}

    # opens the editor to tmpfile for the entry
    # will hold until the user quits
	${JNEDITOR} ${tmpfile}

    # touch it in case it hasn't been created yet
	touch ${journal}

    # add date/timestamp to the entry
	echo -e "$(date +%A) $(date +%B) $(date +%d), $(date +%Y) at $(date +%r):\n" >> ${journal}
	cat ${tmpfile} >> ${journal}

    # A delimiter ... separator for search
	echo -e "\n~~~~~\n" >> ${journal}

    # clean up after ourselves
	rm ${tmpfile}
	echo "Thanks for the update!"

# 'jn -h' -> help
elif [ "$1" = "-h" ]; then
	usage

# 'jn -s' -> search
elif [ "$1" = "-s" ]; then
	if [ $# = 3 ]; then
		# 2 terms allows for searching for date information, i.e., September 2017
		awk -v pattern="$2.*$3" '
		BEGIN {RS="~~~~~"}
		$0 ~ pattern
        	' ${journal}
	elif [ $# = 2 ]; then
		# only 1 search term entered, i.e., September
		awk -v pattern="$2" '
		BEGIN {RS="~~~~~"}
		$0 ~ pattern
        	' ${journal}
	fi
     
# 'jn -b' -> browse the journal
elif [ "$1" = "-b" ]; then
	if [ $# -ne 1 ]; then
		echo "command: jn -b"
	else
	# drop need for less - let user pick pager	
		cat $journal
	fi

# not a command
else
	usage
fi
